Databases: [
  {
    id = "LOCAL_SQLITE"
    subtype = "SQLITE"
    config: {
      host = "/url/me/up"
      port = 4545
      service = "srvc"
      user = "rocco"
      password = "pizza"
    }
  }
]

Sources: [
  {
    id = "SCHEMA_TEST"
    type = "HDFS"
    path = "./Agile.DataQuality/dq-core/src/main/resources/sample-data/battles.csv",
    fileType = "csv",
    separator = ",",
    header = true,
    schema = [{name: "a", type: "string"}, {name: "b", type: "string"},{name: "c", type: "string"}]
    date = "2017-05-19"
  },
  {
    id = "PATH_TEST"
    type = "HDFS"
    path = "./Agile.DataQuality/dq-core/src/main/resources/sample-data/battles.csv",
    fileType = "csv",
    separator = ",",
    header = true,
    schema = "some/path/here"
    date = "2017-05-19"
  },
  {
    id = "TABLE_TEST"
    type = "TABLE"
    database = "LOCAL_SQLITE"
    table = "pinsa"
    username = "rocks"
    password = "pocks"
  },
  {
    id = "HIVE_TEST"
    type = "HIVE"
    date = "2017-05-19"
    query = "select * from sources;"
  }
]

VirtualSources: []

Metrics: [
  {
    id: "101"
    name: "ROW_COUNT"
    type: "FILE"
    description: "determine rows number of this table"
    config: {
      file: "SCHEMA_TEST",
    }
  },
  {
    id: "103"
    name: "NULL_VALUES"
    type: "COLUMN"
    description: "num of null vals"
    config: {
      file: "SCHEMA_TEST",
      column: "attacker_size"
    }
  },
  {
    id: "1031"
    name: "EMPTY_VALUES"
    type: "COLUMN"
    description: "num of null vals"
    config: {
      file: "SCHEMA_TEST",
      column: "attacker_size"
    }
  },
  {
    id: "104"
    name: "SUM_NUMBER"
    type: "COLUMN"
    description: "num of null vals"
    config: {
      file: "SCHEMA_TEST",
      column: "attacker_size"
    }
  },
  {
    id: "maxnum_1"
    name: "NUMBER_VALUES"
    type: "COLUMN"
    description: "num of null vals"
    config: {
      file: "SCHEMA_TEST",
      column: "attacker_size"
      params: {compareValue:15000}
    }
  },
  {
    id: "maxnum_2"
    name: "NUMBER_VALUES"
    type: "COLUMN"
    description: "num of null vals"
    config: {
      file: "SCHEMA_TEST",
      column: "defender_size"
      params: {compareValue:10000}
    }
  }
]

ComposedMetrics: [
  {
    id: "400"
    name: "Percent Null Values"
    description: ""
    formula: "$102 + $1031 + 1"
  },
  {
    id: "0.25_tdigest_check"
    name: "Q1 error"
    description: ""
    formula: "$td025 - ($108 - 0.675*$109)"
  },
  {
    id: "0.5_tdigest_check"
    name: "Q2 error"
    description: ""
    formula: "$td05 - $108"
  },
  {
    id: "0.75_tdigest_check"
    name: "Q3 error"
    description: ""
    formula: "$td075 - ($108 + 0.675*$109)"
  },
  {
    id: "usgs_0.25"
    name: "Q1 error"
    description: ""
    formula: "$usgsMean - 0.675*$usgsStd"
  },
  {
    id: "usgs_0.5"
    name: "Q2 error"
    description: ""
    formula: "$usgsMean"
  },
  {
    id: "usgs_0.75"
    name: "Q3 error"
    description: ""
    formula: "$usgsMean + 0.675*$usgsStd"
  }
]

Checks: [
  {
    id: "sql_check"
    type: "sql"
    subtype: "COUNT_EQ_ZERO"
    config: {
      source: "LOCAL_SQLITE"
      query: "select count(*) from column_metrics where name = 'Rocco'"
    }
  },
  {
    id: "test_check"
    type: "snapshot"
    subtype: "GREATER_THAN"
    description: "check for number rows limit with threshold on table A"
    config: {
      metrics: ["maxnum_2"]
      params: {threshold: "10"}
    }
  },
  {
    id: "test_check_fail"
    type: "snapshot"
    subtype: "GREATER_THAN"
    description: "check for number rows limit with threshold on table A"
    config: {
      metrics: ["maxnum_2"]
      params: {threshold: "100000000"}
    }
  },
  {
    id: "test_0"
    type: "snapshot"
    subtype: "EQUAL_TO"
    description: "check for number rows limit with threshold on table A"
    config: {
      metrics: ["maxnum_2"]
      params: {threshold: "10"}
    }
  },
  {
    id: "test_1"
    type: "snapshot"
    subtype: "LESS_THAN"
    description: "check for number rows limit with threshold on table A"
    config: {
      metrics: ["maxnum_2"]
      params: {threshold: "10"}
    }
  },
  {
    id: "check3"
    type: "snapshot"
    subtype: "LESS_THAN"
    description: "min less than max"
    config: {
      metrics: ["maxnum_2", "maxnum_1"]
      params: {compareMetric: "maxnum_1"}
    }
  },
  {
    id: "trend_check"
    type: "trend"
    subtype: "TOP_N_RANK_CHECK"
    description: "some basic trend"
    config: {
      metrics: ["usgs_0.75"]
      rule: "record"
      params: {threshold: "0.5", timewindow: "2", targetNumber:4}
    }
  },
]

Targets: [
  {
    type: "SYSTEM"
    id: "xsell",
    checkList: ["trend_check", "check3"]
    mailingList: ["hello@egor.com", "bom@tat.eu"],
    config: {
      fileFormat: "csv"
      path: "./Agile.DataQuality/dq-core/output"
      delimiter: ","
      savemode: "append"
    }
  },
  {
    type: "FILE-METRICS"
    config: {
      fileFormat: "csv"
      path: "./Agile.DataQuality/dq-core/output"
      delimiter: ","
      savemode: "append"
    }
  },
  {
    type: "COLUMN-METRICS"
    config: {
      fileFormat: "csv"
      path: "./Agile.DataQuality/dq-core/output"
      delimiter: ","
      savemode: "append"
    }
  },
  {
    type: "COMPOSED-METRICS"
    config: {
      fileFormat: "csv"
      path: "./Agile.DataQuality/dq-core/output"
      delimiter: ","
      savemode: "append"
    }
  },
  {
    type: "CHECKS"
    config: {
      fileFormat: "csv"
      path: "./Agile.DataQuality/dq-core/output"
      delimiter: ","
      savemode: "append"
    }
  }
]